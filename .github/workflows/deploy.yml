name: Publish release

on:
  push:
    tags:
      - 'v*'

jobs:
  publish-release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      BASE-IMAGE: josleke/esgc
#      RELEASE-TAG: ${{ env.GITHUB_REF }}
#      $(echo ${GITHUB_REF} | cut -d '/' -f3)

    steps:
      - name: Checkout latest code
        uses: actions/checkout@v2

      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Scrape build info
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.BASE-IMAGE }}
          tags: ${{ env.RELEASE_VERSION }}

      - name: Build and push Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Deploy to AWS - EC2
        id: deploy
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          HOSTNAME: ${{ vars.SSH_HOST }}
          USER_NAME: ${{ vars.USER_NAME }}
        run: |
          echo "$PRIVATE_KEY" > private_key.pem && chmod 600 private_key.pem
          NEW_VERSION=$(echo "${GITHUB_REF}" | cut -d "/" -f3)
          echo "New version: ${NEW_VERSION}"
          ssh -o "StrictHostKeyChecking no" -i private_key.pem ${USER_NAME}@${HOSTNAME} '
              # Now we have got the access of EC2 and to will start the deploy .
              export LATEST=${NEW_VERSION}
              docker-compose -f /app/gaming-app.yml up -d
              ' 
